// <auto-generated />
using System;
using CRC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CRC.Data.Migrations
{
    [DbContext(typeof(CrcDbContext))]
    partial class CrcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRC.Domain.Entities.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AUTH");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HASH_SENHA");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("T_OP_CRC_AUTH");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_BONUS");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Custo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("CUSTO");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("IdCondominio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<int>("QtdMax")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTD_MAX");

                    b.HasKey("Id");

                    b.HasIndex("IdCondominio");

                    b.ToTable("T_OP_CRC_BONUS");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Condominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CONDOMINIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("T_OP_CRC_CONDOMINIO");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FATURA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtGeracao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DT_GERACAO");

                    b.Property<int>("IdMorador")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MORADOR");

                    b.Property<int>("QtdConsumida")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTD_CONSUMIDA");

                    b.HasKey("Id");

                    b.HasIndex("IdMorador");

                    b.ToTable("T_OP_CRC_FATURA");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Morador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MORADOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("CPF");

                    b.Property<int>("IdAuth")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AUTH");

                    b.Property<int>("IdCondominio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CONDOMINIO");

                    b.Property<string>("IdentificadorRes")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IDENTIFICADOR_RES");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<int?>("Pontos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(0)
                        .HasColumnName("PONTOS");

                    b.Property<int>("QtdMoradores")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTD_MORADORES");

                    b.HasKey("Id");

                    b.HasIndex("IdAuth")
                        .IsUnique();

                    b.HasIndex("IdCondominio");

                    b.HasIndex("Cpf", "IdAuth")
                        .IsUnique();

                    b.ToTable("T_OP_CRC_MORADOR");
                });

            modelBuilder.Entity("CRC.Domain.Entities.MoradorBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MB");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBonus")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_BONUS");

                    b.Property<int>("IdMorador")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MORADOR");

                    b.Property<int>("Qtd")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTD");

                    b.HasKey("Id");

                    b.HasIndex("IdBonus");

                    b.HasIndex("IdMorador", "IdBonus")
                        .IsUnique();

                    b.ToTable("T_OP_CRC_MORADOR_BONUS");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Bonus", b =>
                {
                    b.HasOne("CRC.Domain.Entities.Condominio", "Condominio")
                        .WithMany("Bonus")
                        .HasForeignKey("IdCondominio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Fatura", b =>
                {
                    b.HasOne("CRC.Domain.Entities.Morador", "Morador")
                        .WithMany("Faturas")
                        .HasForeignKey("IdMorador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Morador");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Morador", b =>
                {
                    b.HasOne("CRC.Domain.Entities.Auth", "Auth")
                        .WithOne("Morador")
                        .HasForeignKey("CRC.Domain.Entities.Morador", "IdAuth")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRC.Domain.Entities.Condominio", "Condominio")
                        .WithMany("Moradores")
                        .HasForeignKey("IdCondominio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CRC.Domain.Entities.MoradorBonus", b =>
                {
                    b.HasOne("CRC.Domain.Entities.Bonus", "Bonus")
                        .WithMany("MoradorBonus")
                        .HasForeignKey("IdBonus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CRC.Domain.Entities.Morador", "Morador")
                        .WithMany("MoradorBonus")
                        .HasForeignKey("IdMorador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bonus");

                    b.Navigation("Morador");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Auth", b =>
                {
                    b.Navigation("Morador")
                        .IsRequired();
                });

            modelBuilder.Entity("CRC.Domain.Entities.Bonus", b =>
                {
                    b.Navigation("MoradorBonus");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Condominio", b =>
                {
                    b.Navigation("Bonus");

                    b.Navigation("Moradores");
                });

            modelBuilder.Entity("CRC.Domain.Entities.Morador", b =>
                {
                    b.Navigation("Faturas");

                    b.Navigation("MoradorBonus");
                });
#pragma warning restore 612, 618
        }
    }
}
